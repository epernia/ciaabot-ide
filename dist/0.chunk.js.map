{"version":3,"file":"0.chunk.js","sources":["webpack:///./src/app/editor/index.ts","webpack:///./src/app/editor/editor.component.ts","webpack:///./src/app/editor/components/blockly/blockly.component.ts","webpack:///./src/app/editor/editor.module.ts","webpack:///./src/app/editor/editor.routing.ts","webpack:///./src/app/editor/components/blockly/blockly.component.css","webpack:///./src/app/editor/editor.component.css","webpack:///./src/app/editor/components/blockly/blockly.component.html","webpack:///./src/app/editor/editor.component.html","webpack:///./src/app/editor/components/blockly/blockly.component.css?aa3c","webpack:///./src/app/editor/editor.component.css?4883"],"sourcesContent":["export { EditorModule } from './editor.module';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/editor/index.ts","import {\n  Component,\n  OnInit,\n} from '@angular/core';\n\n\n\n@Component({\n  selector: 'editor',\n  styles: [require('./editor.component.css')],\n  template: require('./editor.component.html')\n})\nexport class EditorComponent implements OnInit {\n  public blocklyCode: string = '';\n  constructor() { }\n\n  public ngOnInit() { }\n\n  public onBlocklyCodeChange(blocklyCode: string) {\n    this.blocklyCode = blocklyCode;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/editor/editor.component.ts","import { Component, OnInit, AfterViewInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeUrl } from '@angular/platform-browser';\nimport { ModalDirective } from 'ng2-bootstrap';\n\ndeclare var Blockly: any;\n// Blockly.prompt = (a, b, c) => { console.log('Prompt modificado. A:', a, ' B: ', b, ' C: ', c); };\n\n@Component({\n  selector: 'app-blockly',\n  template: require('./blockly.component.html'),\n  styles: [require('./blockly.component.css')]\n})\nexport class BlocklyComponent implements OnInit, AfterViewInit {\n\n  public blocklyArea: HTMLElement;\n  public blocklyContainer: HTMLElement;\n  public blocklyToolbox: HTMLElement;\n  public workspace: Blockly.Workspace;\n  public toolboxContent: SafeHtml;\n  public promptModalDesc: string;\n  public promptCallback: any;\n  public promptValue: string;\n\n  @ViewChild('promptModal') public promptModal: ModalDirective;\n\n  @Output() public onBlocklyCodeChange = new EventEmitter<string>();\n\n\n  constructor(private domSanitizer: DomSanitizer) {\n    Blockly.prompt = (a, b, c) => {\n      this.promptModalDesc = a;\n      this.promptCallback = c;\n      this.promptModal.show();\n      console.log('prompt', c);\n    };\n  }\n\n  public ngOnInit() {\n    this.toolboxContent = this.domSanitizer.bypassSecurityTrustHtml(`\n      \n  <xml id=\"toolbox\" style=\"display: none\">\n    <category name=\"Lógica\" colour=\"210\">\n      <block type=\"controls_if\"></block>\n      <block type=\"logic_compare\"></block>\n      <block type=\"logic_operation\"></block>\n      <block type=\"logic_negate\"></block>\n      <block type=\"logic_null\"></block>\n    </category>\n    <category name=\"Entradas / Salidas\" colour=\"120\">\n      <block type=\"ciaa_sapi_gpio_write\">\n        <field name=\"pin_option\">LEDR</field>\n        <field name=\"value_option\">ON</field>\n      </block>\n      <block type=\"ciaa_sapi_gpio_digital_read\" >\n        <field name=\"pin_option\">GPIO0</field>\n      </block>\n      <block type=\"ciaa_sapi_gpio_analog_read\">\n        <field name=\"pin_option\">CH1</field>\n      </block>\n      <block type=\"ciaa_sapi_dac_write\">\n        <field name=\"pin_option\">DAC</field>\n        <field name=\"value_option\">0</field>\n      </block>\n      <block type=\"ciaa_sapi_pwm_write\">\n        <field name=\"pin_option\">PWM0</field>\n        <field name=\"value_option\">50</field>\n      </block>\n      <block type=\"ciaa_sapi_pwm_read\">\n        <field name=\"pin_option\">PWM0</field>\n      </block>\n    </category>\n    <category name=\"Servo\" colour=\"230\">\n      <block type=\"ciaa_sapi_servo_write\">\n        <field name=\"pin_option\">SERVO0</field>\n        <field name=\"angle_value_option\">90</field>\n      </block>\n      <block type=\"ciaa_sapi_servo_read\">\n        <field name=\"pin_option\">SERVO0</field>\n      </block>\n    </category>\n    <category name=\"Control\" colour=\"20\">\n      <block type=\"controls_whileUntil\">\n      </block>\n      <block type=\"ciaa_sapi_blocking_delay\">\n        <value name=\"delay_time\">\n          <block type=\"math_number\">\n            <field name=\"NUM\">1000</field>\n          </block>\n        </value>\n      </block>\n      <block type=\"ciaa_sapi_sleep_until_interrupt\">\n      </block>\n      <block type=\"controls_for\">\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <field name=\"NUM\">1</field>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <field name=\"NUM\">10</field>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <field name=\"NUM\">1</field>\n          </block>\n        </value>\n      </block>\n    </category>\n    <category name=\"Variables\" custom=\"VARIABLE\" colour=\"330\"></category>\n    <category name=\"Funciones\" custom=\"PROCEDURE\" colour=\"290\"></category>\n    <category name=\"Matemática\">\n      <block type=\"math_number\">\n      </block>\n      <block type=\"math_arithmetic\">\n      </block>\n    </category>\n    <category name=\"Texto\">\n      <block type=\"text\"></block>\n    </category>\n  </xml>\n    `);\n  }\n\n  public ngAfterViewInit() {\n    this.blocklyResize();\n    this.workspace.addChangeListener((e) => this.blocklyCodeChange());\n\n  }\n\n  public blocklyResize() {\n    this.blocklyArea = document.getElementById('blocklyArea');\n    this.blocklyContainer = document.getElementById('blocklyDiv');\n    this.blocklyToolbox = document.getElementById('toolbox');\n    this.workspace = Blockly.inject(this.blocklyContainer,\n      {\n        toolbox: this.blocklyToolbox,\n        scrollbars: false\n      });\n    let onresize = (e) => {\n      // Compute the absolute coordinates and dimensions of blocklyArea.\n      let element = this.blocklyArea;\n      let x = 0;\n      let y = 0;\n      do {\n        x += element.offsetLeft;\n        y += element.offsetTop;\n        element = <HTMLElement>element.offsetParent;\n      } while (element);\n      // Position this.blocklyContainer over blocklyArea.\n      // this.blocklyContainer.style.left = x + 'px';\n      // this.blocklyContainer.style.top = y + 'px';\n      this.blocklyContainer.style.width = this.blocklyArea.offsetWidth + 'px';\n      this.blocklyContainer.style.height = this.blocklyArea.offsetHeight + 'px';\n    };\n    window.addEventListener('resize', onresize, false);\n    onresize(null);\n    Blockly.svgResize(<Blockly.WorkspaceSvg>this.workspace);\n  }\n\n  public blocklyCodeChange() {\n    let code = Blockly.CiaaSapi.workspaceToCode(this.workspace);\n    this.onBlocklyCodeChange.emit(code);\n  }\n\n  public promptReady() {\n    this.promptCallback(this.promptValue);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/editor/components/blockly/blockly.component.ts","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { routes } from './editor.routing';\nimport { EditorComponent } from './editor.component';\nimport { BlocklyComponent } from './components/blockly/blockly.component';\nimport { ModalModule } from 'ng2-bootstrap/modal';\n\n@NgModule({\n  declarations: [\n    // Components / Directives/ Pipes\n    EditorComponent,\n    BlocklyComponent\n],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ModalModule.forRoot(),\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class EditorModule {\n  public static routes = routes;\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/editor/editor.module.ts","import { EditorComponent } from './editor.component';\n\nexport const routes = [\n  { path: '', children: [\n    { path: '', component: EditorComponent },\n  ]},\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/editor/editor.routing.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#blocklyArea {\\n    height: calc(95% - 4.5rem); /* Header height plus margin */\\n    margin: 0;\\n    padding: 0;\\n}\\n\\n#blocklyDiv {\\n    position: absolute;\\n}\\n\\n.modal-body {\\n    text-align: center;\\n}\\n\\n.modal-body input {\\n    margin: 15px 0;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/editor/components/blockly/blockly.component.css\n// module id = 446\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*styles for home content only*/\\n:host>.container-fluid {\\n    background-color: #ffffff;\\n    color: #616161;\\n    display: inline-block;\\n    height: 100%;\\n    margin: 0;\\n    width: 100%;\\n}\\n\\n#codePreview {\\n    background-color: rgba(45, 131, 190, 0.14);\\n    border-radius: 10px;\\n    font-family: monospace;\\n    margin-top: 20px;\\n    padding: 10px;\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/editor/editor.component.css\n// module id = 447\n// module chunks = 0","module.exports = \"<div class=\\\"container-fluid\\\" id=\\\"blocklyArea\\\">\\n  <div id=\\\"blocklyDiv\\\"></div>\\n</div>\\n\\n\\n<div [hidden]=\\\"true\\\" [outerHTML]=\\\"toolboxContent\\\"></div>\\n\\n<div bsModal #promptModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"promptModal\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">{{promptModalTile || 'Ingrese valor'}}</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        {{promptModalDesc}}\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"promptValue\\\" class=\\\"form-control\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"promptModal.hide(); promptReady();\\\">\\n          Ok\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"promptModal.hide();\\\">\\n          Cancelar\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editor/components/blockly/blockly.component.html\n// module id = 451\n// module chunks = 0","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\" style=\\\"height: 100%;\\\">\\n    <div class=\\\"col-9\\\">\\n      <h1 class=\\\"display-4\\\">Editor</h1>\\n      <app-blockly (onBlocklyCodeChange)=\\\"onBlocklyCodeChange($event)\\\"></app-blockly>\\n    </div>\\n    <div class=\\\"col-3\\\">\\n      <p class=\\\"lead\\\">Vista previa</p>\\n      <pre id=\\\"codePreview\\\">\\n        {{blocklyCode}}\\n      </pre>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editor/editor.component.html\n// module id = 452\n// module chunks = 0","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!./blockly.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editor/components/blockly/blockly.component.css\n// module id = 456\n// module chunks = 0","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!./editor.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editor/editor.component.css\n// module id = 457\n// module chunks = 0"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;ACHA;AAYA;AAEA;AADA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AATA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;ACZA;AACA;AACA;AAGA;AAOA;AAgBA;AAAA;AAAA;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAqFA;AAEA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAnJA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AAbA;AALA;AACA;AACA;AACA;AACA;AAiBA;AAhBA;AAAA;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAgBA;AAAA;AAEA;AAAA;AAAA;AADA;AADA;AAdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACxBA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;","sourceRoot":""}